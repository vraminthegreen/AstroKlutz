pygame.todo

- przejście do nowej galaktyki
- dodanie wormhole, ale stabilniejszego z tej strony
- animacja wyrzuconego statku i detonacji
- scen1, panel5
- scen1, panel6
- scen1, panel7

- ordery przy zoom
- tryb wykonywania rozkazów grupowych natychmiast

- Rozkaz grupowy pozostały
- implementacja animacji odrzutu (osobnej)
- dodanie innych typów statków
- rozkazy grupowe uwzględniają formację2
- animacja ściemniania dustu na przeźroczystości


💡 kolory statków (od czerwonego):
    niebieski: -120
    zielony: 80
    żółty: 40 (jasność 10)


+ algorytm drugiego statku - tryb 1 - poszukiwanie punktu za
+ klasa order zakładana przyciskiem myszy
+ autopilot mode
+ rakietka
+ animacja wybuchu
+ kolizja
+ klasa pocisk
+ strzelanie pociskiem
+ znikanie pocisku
+ posiadanie pocisku limit pocisków
+ drugi statek
+ is_in_field(dir-a,dir-b,min-dist,max-dist)
+ przełączanie między trybem 1 a drugim a drugim / stożki 45 stopni, 20 stopni
+ algorytm drugiego statku - tryb 2 - gonienie statku i strzelanie
+ zlecenie animacji + funkcji
+ przeróbka wybuchu na animację + funkcję
+ kolizje pocisków
+ dodać do kolizji zasięg
+ animacja końcowa pocisków przy trafieniu
+ RocketFrigateClass - obrazek
+ RocketFrigateClass - pilot - odpalanie rakiety

+ kolizja zniszczenie
+ przejść na animacje globalne (w game, słownik)
+ animacja tarczy
+ overlay animation
+ tarcza w zależności od kąta
+ wygenerowanie sprite midjourney
+ przygotowanie spritów
x podział sprite na podstawkę i barwy
x implementacja koloryzacji
+ przygotowanie kolorów spritów (skalowanie, obracanie)
+ Team
+ IconRepository
+ przygotowanie ładowania spritów i mechanizmu wybierania kolorów
+ nie działa kolor
+ nie działa pocisk
+ algorytm walki do klasy pilot
+ definicje statku do osobnej klasy, definicja FighterClass
+ dwa typy statków - swoje i wrogie
x przejść na multidziedziczenie z funkcjonalnością hit/dead
+ RocketFrigateClass - pilot - gdy odpalona rakieta
+ RocketFrigateClass - pilot - gdy nie odpalona rakieta
+ nebula
+ paralaksa nebuli / kilka warstw
+ przejście na współrzędne dookoła zera + camera_offset
+ dust
+ move camery 
+ move camery automatyczny żeby zawierały się wszystkie statki
+ zoom out / zoom in manualny
+ przejście na zoom liczony samodzielnie
    + odwrócenie obliczenia
    + przywrócenie działania zoom - dla współrzędnych
    + przywrócenie działania pan
    + zoom wpływa na zakres (widoczne okno)
    + pan przy zoomie
    + zachowanie dust przy panningu (2 poziom)
    + przywrócenie działania zoom - skalowanie ikon
    + zachowanie dust przy zoom
+ dust tempo mrugania / zakres kolorów
+ dust exit animation
+ dust entry animation
+ nebula się zoomuje powoli
+ dust - generowanie dust dla docelowego rozmiaru pola (zoomu)
+ obliczenie bounding rect dla statków
+ zoom automatyczny żeby zawierały się wszystkie statki: wybór zoomu
+ wybór panu
+ pan automatyczny
+ wypuszczenie wersji
+ pauzowanie
+ poprawka odrysowywania focusa
+ naprawienie współrzędnych target
+ zaznaczanie statków / focus (swój, obcy)
+ menu: grafiki
+ menu: boilerplate (z callbackami)
+ menu: wyświetlanie dla x, y, zoom, spread
+ menu: animacja początkowa
+ menu: animacja podświetlenia
+ menu: animacja odświetlenia
+ menu dla targetu (tło): atak, ruch, target
+ menu: animacja kliknięcia
+ kliknięcie powoduje ustawienie fokusu, i kliknięcia są już przekazywane do obiektu w fokusie
+ kliknięcie pod statkiem na tle powoduje otwarcie menu i ustawienie focusa na menu (focus stosowy)
+ podpięcie menu dla targetu
+ hide menu animation
+ esc powoduje usunięcie ostatniego elementu ze stosu focusów
+ implementacja ruchu
+ icona dla target move
+ implementacja ataku: osobny target, podpięcie
+ implementacja ataku: ping animation
+ implementacja ataku: implementacja sprawdzenia, przy zakończeniu ping animation
+ implementacja ataku: order wcelowany w statek
+ implementacja ataku: włożenie target - statek na stos ataków
+ implementacja ucieczki (oddalanie się od punktu)
+ osobne obiekty tła i gry
+ menu dla statku wrogiego: atak, ucieczka
+ podpięcie menu dla statku wrogiego
+ menu dla statku przyjacielskiego: follow, guard
+ podpięcie menu dla statku przyjacielskiego
+ implementacja follow friend
+ implementacja guard friend
+ podpięcie akcji menu wroga
+ implementacja wyświetlania orderów tylko gdy statek ma focus
+ implementacja lini łączącej ordery
+ backspace kasuje ostatni target
+ zastrzelenie wrogiego statku nie kasuje orderu
+ implementacja patrolu
+ poprawka missile, w ogóle przestał działać
+ tworzenie grupy - programistyczne, wyświetlanie grupy jako obejmującego prostokąta
+ wyświetlanie grupy jako miniaturek należących statków
+ dodanie cyfry - identyfikatora grupy do wyświetlania
+ selekcja grupy przez wciścięcie cyfry
+ podłączenie standardowych menu do grupy
+ menu grupy dla przyjaznego statku poza grupą, dodatkowa opcja + dodaj do grupy
+ menu dla siebie - stwórz grupę
+ stwórz grupę implementacja
+ implementacja dodaj do grupy
+ implementacja usuń z grupy
+ kliknięcie daleko od menu zamyka menu
+ taget TargetGroupMove - utworzenie
+ TargetGroupMove - po utworzeniu dodawane są sub-targety bezpośrednio do posiadanych statków
+ TargetGroupMove - skompletowany gdy skompletowane są wszystkie sub-targety
+ Group po dodaniu statku dodawany jest subtarget dla statku
+ Group po usunięciu statku usuwany jest subtarget dla statku
+ ship.register_on_dead_listener, + w grupie usunięcie shipa
+ co się dzieje gdy zniszczymy ship w grupie - coś się wywala
+ nazewnictwo statków, FOUND ENEMY + nazwy statków, hit + nazwa statku, dead + nazwa statku
+ Rozkaz grupowy dla ataku analogiczny do move
+ Próba abstrakcji dla rozkazów grupowych
+ jak statek z grupy ginie to coś się krzaczy
+ problem z animacją ping po osiągnięciu celu
+ rozkaz grupowy patrolowania
+ coś nie działa przy patrolowaniu jak się zapętla
+ swój / obcy dla pocisków (za dużo friendly fire)
+ rozkaz pilnowania miejsca (opcja dla ataku)
+ rozkaz pilnowania miejsca grupowy (opcja dla ataku)
+ lepsza logika ataku: w fazie 2 atakujemy losowy punkt przed statkiem, ale nie wyprzedzamy
+ podobna logika dla rakiety (odległość punktu przed zależna od odległości od celu)
+ missile wybucha przy innych wrogach
+ weak orders (usuwane gdy jest cokolwiek, i nie liczą się przy oczekiwaniu na spełnienie grupowego)
x poprawka rozwalania się o wybuch (to mi się jednak podoba)
+ klasa scenariusz dla teamu
+ po wybuchu przeciwnika (on_dead), statek wybiera nowy cel (prosi o nowy cel team i dostaje z klasy scenariusz)
+ Rozkaz grupowy dla ucieczki
+ background ma pozycję, poza pozycją tło jest czarne
+ porawka na kamerzystę
+ przyciemnienie backgroundu
+ projekt: dodanie awaryjnych backgroundów jeśli stateczek poleci dalej (można dolecieć do innych teł)
+ ze 4 alternatywne backgroundy - grafa
x zdarzenie - opuszczenie strefy wpływu
x wygenerowanie nowego backgroundu
x leniwe ładowanie ikony w backgroundzie
x usuwanie ikony w backgroundzie
+ analiza zachowania zoom out
+ lock zoom
+ rozrysowanie jakiejś interesującej walki jako scenariusz eksperymentalny
+ skasowanie orderu grupowego usuwa order jednostkowy
+ scen1: przeniesienie całej gry do scenariusza
+ scen1: klasa Comic (dziedzicząca z gry), animacja galaktyk
+ scen1: wstępna pogaducha z ChatGPT, pierwszy komiks, pierwszy dialog
+ scen1: pokazanie komiksu (animacja)
+ scen1: pokazanie dialogu
+ scen1: przewijanie dialogu
+ scen1: przewijanie komiksów
+ scen1: zamknięcie komiksu
+ scen1: utworzenie sceny gry
+ scen1: utworzenie skauta
+ scen1: utworzenie science vesel
+ scen1: utworzenie floty
+ scen1: dodanie planety
+ scen1: dodanie riftu
+ scen1: wydanie rozkazów, odpalenie
+ scen1: blokada edycji
+ scen1: warunek dotarcia na miejsce
+ scen1: odpalenie błysku
+ komiks - dymki mowy
+ scen1: komiks
+ scen1, panel3
+ scen1, panel4
+ wprowadzenie dźwięków - muzyka tło
+ efekty dźwiękowe - rozmowy podczas lotu
+ efekt dźwiękowy - buzz
+ ekekt dźwiękowy - detonacja

